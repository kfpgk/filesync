@startuml libfilesync-data-layer-class

title libfilesync Data Layer Class Diagram \n\
Observer and Composite Patterns

abstract class "Entry<Subject>" as subjectEntry {
    - observers : Observer[]
    + registerObserver(Observer): void
    + unregisterObserver(Observer): void
    - notify(): void 
}
abstract class "Entry<Observer>" as observerEntry {
    + update(Entry*)
}
abstract class "Entry" as entry {
    - path : filesystem::path
    - lastWriteTime : filesystem::file_time_type 
    + performOnChange() : void
    + getPath() : filesystem::path
    + getEntry(filesystem::path&) : Entry* 
    + hasChanged() : bool
    + resetChanged() : void
    + performOnChange() : void
    + hasRemote() : bool
    + getRemotePath() : string
    + setRemote(string&) : void 
    + validate() : bool
    + print() : void
}
class "Directory<Composite>" as directory {
    - components : Entry*[]
    + addEntry(Entry) : void
    + removeEntry(Entry) : void
    - getEntry(filesystem::path) : Entry
    - performOnChange() : void
    - setRemote(string&) : void
    - validate() : bool
    - print() : void
}
class "File<Leaf>" as file {

}
class "FileSyncer" as syncer {
    + update(Entry*): void

}
class "RemoteEntry" as remote {
    - path: string
}

subjectEntry o- "*" observerEntry
subjectEntry <|-- entry
observerEntry <|-- syncer
entry <|-- directory
entry "*" --o directory
entry <|-- file
entry <- syncer
remote "0..1" -o entry
 
@enduml